---
- name: Configure Jenkins Server
  hosts: jenkins-vm
  become: yes
  vars:
    jenkins_home: "/var/jenkins_home"
    docker_compose_path: "/opt/jenkins/docker-compose.yml"

  tasks:
    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - docker.io
        - docker-compose
        - python3-pip
        - git

    - name: Add jenkins user to docker group
      user:
        name: jenkins
        groups: docker
        append: yes

    - name: Create Jenkins directory structure
      file:
        path: "{{ item }}"
        state: directory
        owner: jenkins
        group: jenkins
      loop:
        - /opt/jenkins
        - "{{ jenkins_home }}"

    - name: Copy Jenkins Docker Compose config
      copy:
        src: "{{ playbook_dir }}/files/jenkins-docker-compose.yml"
        dest: "{{ docker_compose_path }}"
        owner: jenkins
        group: jenkins

    - name: Build Jenkins custom image
      community.docker.docker_compose:
        project_src: "{{ playbook_dir }}/custom-docker/jenkins"
        build: yes
      tags: build

    - name: Start Jenkins services
      community.docker.docker_compose:
        project_src: "{{ playbook_dir }}"
        files:
          - "{{ docker_compose_path }}"
        state: present
        restart: yes
        pull: yes
      register: compose_output

    - name: Wait for Jenkins to initialize
      uri:
        url: http://localhost:8080
        status_code: 200
        retries: 30
        delay: 10

    - name: Display initial admin password
      command: docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword
      register: jenkins_password
      changed_when: false

    - name: Show Jenkins credentials
      debug:
        msg: |
          Jenkins is now accessible at http://{{ ansible_host }}:8080
          Initial admin password: {{ jenkins_password.stdout }}